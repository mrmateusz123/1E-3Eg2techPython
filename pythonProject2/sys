def addineverysystem(licz1,licz2,sys):
    if(len(licz1)<len(licz2)):
        licz1 = str(0*(len(licz1)-len(licz2))) + licz1
        print(len(licz1) - len(licz2))
    elif(len(licz1)>len(licz2)):
        licz2 = str(0*(len(licz2)-len(licz1))) + licz2
        print(len(licz2) - len(licz1))


    print()
    print(licz1,licz2)
    licz1 = licz1[::-1]
    licz2 = licz2[::-1]
    add = 0
    wyn = ""
    for i in range(min(len(licz1),len(licz2))):
        w = int(licz1[i])+int(licz2[i])+add
        if(w >= sys):
            w = w-sys
            add = 1
        else:
            add = 0
        wyn += str(w)
    if(add>0):
        wyn+=str(add)
    wyn = wyn[::-1]
    return wyn
def todec(licz,sys):
    wyn = 0
    licz=licz[::-1]
    j = 0
    for i in licz:
        wyn += int(licz)*(sys**j)
        j+=1
    return(wyn[::-1])
def z1():
    licz1 = input()
    licz2 = input()
    sys = int(input())
    dec = todec(addineverysystem(licz1,licz2,sys),sys)
    print(addineverysystem(licz1,licz2,sys),"\n",dec)
def zad():
    inp = input("Zadanie(q by zakończyć,t by bardziej przetestować): ")
    if (inp != 'q'):
        try:
            if (inp != 't'):
                exec("z" + inp + "()")
            else:
                inp = input("testowanie: ")
                if (inp != 'q'):
                    exec(inp)
            print('\n')
        except Exception as error:
            print("błąd:", error)
        zad()
zad()
