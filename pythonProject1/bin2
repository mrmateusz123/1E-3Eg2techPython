def wy(T,a,n):
    lewy = 0
    prawy =  n - 1
    while lewy < prawy:
        srodek = (lewy+prawy)//2
        if T[srodek] < a:
            lewy = srodek + 1
        else:
            prawy = srodek
    if(T[lewy]==a):
        return True
    return False

def wy_rek(T,a, lewy, prawy):
    if lewy < prawy:
        srodek = (lewy+prawy)//2
        if T[srodek] < a:
            return wy_rek(T, a, srodek+1, prawy)
        else:
            return wy_rek(T, a, lewy, srodek)
    if(T[lewy]==a):
        return True
    return False

def so(LI):
    for i in range(len(LI)-1):
        if(LI[i]>LI[i+1]):
            return False
    return True

def z1():
    L = list(map(int, input().split()))
    if(so(L)==False):
        print("ciąg musi być uporządkowany niemalejąco")
        z1()
    a = int(input("Podaj a: "))
    if(wy(L,a,len(L))):
        print("tak")
    else:
        print("nie")
def z2():
    L = list(map(int, input().split()))
    if(so(L)==False):
        print("ciąg musi być uporządkowany niemalejąco")
        z1()
    a = int(input("Podaj a: "))
    if(wy_rek(L,a,0,len(L)-1)):
        print("tak")
    else:
        print("nie")
def z3():
    c = open("ciagi.txt")
    T = list(map(str, c.read().split("\n")))
    c.close()
    L = []
    for i in range(len(T)-1):
        L = T[i].split(" ")
        for j in range(len(L)):
            L[j]=int(L[j])
        if(wy(L,10,len(L))):
            print(L)

def zadania():
    zad = int(input("które zadanie?:"))
    if (zad == 0):
        print("end")
    else:
        if zad == 1:
            z1()
        elif zad == 2:
            z2()
        elif zad == 3:
            z3()
        print()
        zadania()

zadania()
